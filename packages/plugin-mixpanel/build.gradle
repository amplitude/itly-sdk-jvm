plugins {
    id 'org.jetbrains.kotlin.multiplatform'
}

repositories {
    google()
    jcenter()
    mavenCentral()
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android-extensions'
apply from: rootProject.file('gradle/publish-mpp.gradle')

task jvmDocsJar(type: org.gradle.jvm.tasks.Jar, dependsOn: dokkaHtml) {
    classifier 'javadoc'
//    from "$buildDir/javadoc/jvm"
    from "$buildDir/dokka"
}

android {
    compileSdkVersion 29
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName '0.1'
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    sourceSets {
        main {
            manifest.srcFile 'src/androidMain/AndroidManifest.xml'
            java.srcDirs = ['src/androidMain/kotlin']
            res.srcDirs = ['src/androidMain/res']
        }
        test {
            java.srcDirs = ['src/androidTest/kotlin']
            res.srcDirs = ['src/androidTest/res']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
        //If you want to continue even if errors found use following line
        abortOnError false
    }
    testOptions.unitTests.includeAndroidResources = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation 'com.android.support:appcompat-v7:28.0.0'
//    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
}

kotlin {
//    jvm("jvm") {
//        compilations.main.kotlinOptions {
//            // Setup the Kotlin compiler options for the 'main' compilation:
//            jvmTarget = "1.8"
//        }
//    }

    android("android") {
        publishLibraryVariants("release")
    }

    targets.all {
        compilations.all {
            kotlinOptions {
                // jvmTarget = "1.8"
                allWarningsAsErrors = false
            }
        }
    }

    sourceSets {
        // COMMON
        commonMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation project(":packages:sdk-core")
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }

        // ANDROID
        androidMain {
            dependsOn commonMain
            dependencies {
                implementation 'com.mixpanel.android:mixpanel-android:5.8.4'
            }
        }
        androidTest {
            dependsOn commonTest
        }

        // JVM
//        jvmMain {
//            dependsOn commonMain
//            dependencies {
//                implementation 'com.mixpanel:mixpanel-java:1.4.4'
//                // Android has it's own org.json included by default
//                implementation 'org.json:json:20200518'
//            }
//        }
//        jvmTest {
//            dependsOn commonTest
//        }
    }

    configure([targets["metadata"], android()]) {
        mavenPublication {
            groupId = project.group
            version = project.version

            artifact(jvmDocsJar)

            pom {
                name = 'Iteratively Mixpanel Plugin'
                description = 'Iteratively Analytics SDK for JVM'
                url = 'https://iterative.ly'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'iteratively-justin'
                        name = 'Justin Fiedler'
                        email = 'justin@iterative.ly'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/iterativelyhq/itly-sdk-jvm.git'
                    developerConnection = 'scm:git:https://github.com/iterativelyhq/itly-sdk-jvm.git'
                    url = 'https://github.com/iterativelyhq/itly-sdk-jvm'
                }
            }
        }
    }
}

apply from: rootProject.file('gradle/dokka-mpp-android.gradle')
